#!/bin/bash

__lower() {
	echo "$@"|tr "[:upper:]" "[:lower:]"
}

__menu() {
	local result=""
	PS3=$1
	shift
	select opt in "$@" "Cancel"; do
		if [[ $REPLY =~ ^[0-9]+$ ]] && [[ $REPLY -le ${#options[@]} ]]; then
			result=$opt
			break
		else
			result="CANCEL"
			break
		fi
	done
	echo $result
}

# tmux wrapper
#   `tm session-name`
# Names can be partial from the beginning and first match will connect.
# If no match is found a new session will be created.
__tm() {
	local tmux_cmd
	tmux_cmd=${TM_TMUX_COMMAND:-"tmux"}
	local attach cleft cright

	if [[ -n $TMUX ]]; then
		echo "Already in a tmux session"
		return 1
	fi

	if [ -n "$1" ]; then
		attach=""

		if $tmux_cmd has-session -t "$1" > /dev/null; then
			attach=$1
			shift
		else
      for session in $(tmux ls -F '#S');do
				cleft=$(__lower "$session")
				cright=$(__lower "$1")
				if [[ $cleft =~ ^$cright  ]]; then
					echo "Matched session: $session"
					attach=$session
					shift
					break
				fi
			done
		fi

		if [[ $attach != "" ]]; then
			$tmux_cmd attach -t "$attach"
		else
			if [ $# -gt 1 ]; then
				attach=$1
				shift
				$tmux_cmd new -s "$attach" -n "$1"
			else
				echo "Attempting to create $1"
				$tmux_cmd new -s "$1"
			fi
		fi
	else
		if ! $tmux_cmd ls &>/dev/null; then
			$tmux_cmd new
			return 0
		fi
		if which fzf &>/dev/null; then
			attach=$(tmux ls -F '#S'|fzf +m --cycle -1 --height=8 --layout=reverse-list --prompt="Choose session> ")
			if [[ -n $attach ]]; then
  			$tmux_cmd attach -t "$attach"
			fi
		else
      options=()
      while IFS='' read -r line; do options+=("$line"); done < <($tmux_cmd ls -F '#S')
			if [[ ${#options[@]} -gt 1 ]]; then
				attach=$(__menu "Select session: " "${options[@]}")
				if [[ "$attach" != "CANCEL" ]]; then
					$tmux_cmd attach -t "$attach"
				fi
			else
				$tmux_cmd attach -t "${options[0]}"
			fi
		fi
	fi
}

__tm "$@"
