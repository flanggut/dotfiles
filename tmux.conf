if-shell "uname | grep -q Darwin" "set-option -g default-shell /usr/local/bin/fish" "set-option -g default-shell /bin/fish"
set -g prefix2 C-a                        # GNU-Screen compatible prefix
bind C-a send-prefix -2
set -g mode-keys vi
set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on
set -g history-limit 5000                 # boost history
set -sg escape-time 0                     # because VIM
set -g default-terminal "screen-256color" # all the colors

# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows
setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed
set -g set-titles on          # set terminal title
set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time
set -g status-interval 10     # redraw status line every 10 seconds

# activity
set -g monitor-activity on
set -g visual-activity off

# status
set -g status-bg colour0
set -g status-fg colour7
set -g status-left ' '
set -g status-right ''
setw -g window-status-current-format '#[underscore,bold]#I #W#[nounderscore,nobold] '
setw -g window-status-format ' #I #W '

# -- navigation ----------------------------------------------------------------
# rerun last command on other split
bind -r p send -t -1 C-p Enter
bind -r C-p send -t -1 C-p Enter

# split current window horizontally
bind s split-window -v -c '#{pane_current_path}'
# split current window vertically
bind v split-window -h -c '#{pane_current_path}'

# pane navigation
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
bind-key -n 'M-,' if-shell "$is_vim" 'send-keys M-,'  'split-window -v -c "#{pane_current_path}"'
bind-key -n 'M-.' if-shell "$is_vim" 'send-keys M-.'  'split-window -h -c "#{pane_current_path}"'

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R

# bind -r h select-pane -L  # move left
# bind -r j select-pane -D  # move down
# bind -r k select-pane -U  # move up
# bind -r l select-pane -R  # move right
# bind > swap-pane -D       # swap current pane with the next one
# bind < swap-pane -U       # swap current pane with the previous one
# bind -r x kill-pane       # kill without confirmation

# maximize current pane
bind F break-pane

# window navigation
bind -r C-j previous-window # select previous window
bind -r C-k next-window     # select next window
bind Tab last-window        # move to last active window

# -- copy mode -----------------------------------------------------------------
bind Enter copy-mode # enter copy mode
run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'
